<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>翼图南</title><link href="https://wing2south.com/" rel="alternate"></link><link href="https://wing2south.com/feeds/fen-xiang-lian-jie.atom.xml" rel="self"></link><id>https://wing2south.com/</id><updated>2013-09-18T17:28:11+08:00</updated><entry><title>A guide to analyzing Python performance</title><link href="https://wing2south.com/post/61576461357/a-guide-to-analyzing-python-performance/" rel="alternate"></link><published>2013-09-18T17:28:11+08:00</published><updated>2013-09-18T17:28:11+08:00</updated><author><name>Leonardo Zhou</name></author><id>tag:wing2south.com,2013-09-18:post/61576461357/a-guide-to-analyzing-python-performance/</id><summary type="html">&lt;p&gt;&lt;a href="http://www.huyng.com/posts/python-performance-analysis/"&gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;!-- PELICAN_BEGIN_SUMMARY --&gt;

&lt;p&gt;一篇 Python 性能分析方面的好文&lt;!-- PELICAN_END_SUMMARY --&gt;，介绍了分别用 unix &lt;code&gt;time&lt;/code&gt;命令和 &lt;code&gt;context manager&lt;/code&gt; 来粗略/精细地测试 Python 脚本的运行时间； 使用 &lt;code&gt;line_profiler&lt;/code&gt; 库 精细衡量每行代码的执行时间； 使用 &lt;code&gt;memory_profiler&lt;/code&gt; 库测试内存使用情况； 使用 &lt;code&gt;objgraph&lt;/code&gt; 库检测内存泄漏 ...&lt;/p&gt;</summary><category term="performance"></category></entry><entry><title>Migrating to a Custom User Model in Django</title><link href="https://wing2south.com/post/59365178838/migrating-to-a-custom-user-model-in-django/" rel="alternate"></link><published>2013-08-26T11:57:00+08:00</published><updated>2013-08-26T11:57:00+08:00</updated><author><name>Leonardo Zhou</name></author><id>tag:wing2south.com,2013-08-26:post/59365178838/migrating-to-a-custom-user-model-in-django/</id><summary type="html">&lt;p&gt;&lt;a href="http://www.caktusgroup.com/blog/2013/08/07/migrating-custom-user-model-django/"&gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这篇 blog &lt;!-- PELICAN_BEGIN_SUMMARY --&gt; 详尽阐述了把现有的 UserModel 迁移到 Django 1.5 的 Custom User Model 所需的十几个步骤和注意事项&lt;!-- PELICAN_END_SUMMARY --&gt;。&lt;/p&gt;
&lt;p&gt;对打算迁移 UserModel 的同学来说，是一份很不错的checklist!&lt;/p&gt;</summary><category term="django"></category></entry><entry><title>Golang Weekly Go语言周报</title><link href="https://wing2south.com/post/43698273813/golang-weekly-go/" rel="alternate"></link><published>2013-02-22T11:48:26+08:00</published><updated>2013-02-22T11:48:26+08:00</updated><author><name>Leonardo Zhou</name></author><id>tag:wing2south.com,2013-02-22:post/43698273813/golang-weekly-go/</id><summary type="html">&lt;p&gt;&lt;img alt="images/golangweekly.png" src="http://ww3.sinaimg.cn/large/6c3391c1gw1eee7bxouwwj20dw0ijt9v.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://golangweekly.com/archive/golang-weekly-issue-1.html"&gt;Golang Newsletter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;介绍最新的Go语言和社区动态，每月大概有1-2封，对Go感兴趣的同学可以关注下&lt;/p&gt;</summary><category term="golang"></category></entry><entry><title>为什么有些网址中使用“utf8=✓”而不是“utf8=true”?</title><link href="https://wing2south.com/post/40769640185/utf8-utf8-true/" rel="alternate"></link><published>2013-01-18T01:11:00+08:00</published><updated>2013-01-18T01:11:00+08:00</updated><author><name>Leonardo Zhou</name></author><id>tag:wing2south.com,2013-01-18:post/40769640185/utf8-utf8-true/</id><summary type="html">&lt;p&gt;IE又中枪了。 老版本的IE浏览器 (&amp;lt; IE9) 提交 form 数据时，会尽可能地使用&lt;code&gt;Latin-1&lt;/code&gt;编码， 而不是群众喜闻乐见的 &lt;code&gt;utf-8&lt;/code&gt; 编码。&lt;/p&gt;
&lt;p&gt;✓这个无法用&lt;code&gt;Latin-1&lt;/code&gt;编码的字符会迫使IE使用 &lt;code&gt;utf-8&lt;/code&gt;，从而简化了server端的实现。&lt;/p&gt;
&lt;p&gt;同理，Ruby on Rails 是在 form 里插入 一个 值为 ☃ 的 hidden input field。&lt;/p&gt;
&lt;p&gt;Stackexchange 上的问答: &lt;a href="http://programmers.stackexchange.com/questions/168751/is-the-use-of-utf8-preferable-to-utf8-true?newsletter=1&amp;amp;nlcode=44917%7c4830"&gt;Is the use of “utf8=✓” preferable to “utf8=true”?&lt;/a&gt;&lt;/p&gt;</summary><category term="冷知识"></category><category term="黑魔法"></category></entry></feed>